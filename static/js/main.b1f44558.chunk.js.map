{"version":3,"sources":["styles.js","parsers/mostCommonOpening.js","utils/helperMethods.js","utils/utilityComponents.jsx","App.js","parsers/biggestUpset.js","parsers/winner.js","parsers/resultTypes.js","parsers/mostMovesGame.js","parsers/fewestMovesGame.js","reportWebVitals.js","index.js"],"names":["spin","keyframes","green","Container","styled","main","Panel","div","Results","H1","h1","H2","h2","IconAndTitle","Section","section","Input","input","Button","button","LoadingContainer","ErrorMessage","openingTermsMilestones","getMostCommonOpening","games","openings","map","game","eco","parsedOpenings","opening","milestones","reduce","acc","milestone","includes","substring","indexOf","length","removeAfterIfExists","replace","parseOpenings","_","compact","mostCommonOpeningsObj","value","key","count","retrieveMostCommonOpening","countBy","pgnToObject","pgn","str","featuresToObject","match","feature","splitF","split","Moves","cur","moveNumber","move","Icon","icon","color","style","marginRight","LinkIcon","url","href","marginLeft","target","rel","faExternalLinkAlt","cursor","App","useState","data","setData","error","setError","loading","setLoading","userInput","setUserInput","mostCommonOpening","setMostCommonOpening","biggestUpset","setBiggestUpset","winner","setWinner","winningOutcomes","setWinningOutcomes","mostMovesGame","setMostMovesGame","fewestMovesGame","setFewestMovesGame","getData","evt","a","preventDefault","slug","axios","get","initialData","rounds","roundData","groups","nonArenaData","Error","useEffect","winningRating","white","result","rating","black","losingRating","winningRatingExisting","players","found","find","player","is_winner","place_finish","username","getWinner","resultTypes","gameOutcomes","draw","win","timeout","resigned","checkmated","pick","getResultTypes","gameWithMostMoves","pgnToObjCur","pgnToObjAcc","nth","Object","keys","getGameWithMostMoves","gameWithFewestMoves","getGameWithFewestMoves","onSubmit","onChange","type","faSpinner","faTrophy","faChessPawn","faFlagCheckered","width","margin","label","dataEntry","title","labelStyle","fontSize","faSurprise","faWalking","faRunning","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1f44558.chunk.js","sourcesContent":["import styled, { keyframes } from \"styled-components\";\n\nconst spin = keyframes`\n  from {\n      transform:rotate(0deg);\n  }\n  to {\n      transform:rotate(360deg);\n  }\n`;\n\nexport const green = \"#6E9C47\";\n\nexport const Container = styled.main`\n  display: flex;\n  justify-content: center;\n  color: #eee;\n  background-color: #000;\n`;\n\nexport const Panel = styled.div`\n  text-align: center;\n  background-color: #444;\n  margin: 30px 0;\n  padding: 20px;\n`;\n\nexport const Results = styled.div`\n  margin-top: 70px;\n`;\n\nexport const H1 = styled.h1`\n  font-family: \"Fjalla One\", sans-serif;\n  text-transform: uppercase;\n  font-size: 40px;\n  margin-bottom: 40px;\n`;\n\nexport const H2 = styled.h2`\n  font-family: \"Fjalla One\", sans-serif;\n  text-transform: uppercase;\n`;\n\nexport const IconAndTitle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n  font-size: 30px;\n`;\n\nexport const Section = styled.section`\n  margin-top: 30px;\n  margin-bottom: 60px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  border: none;\n  margin: 10px 0;\n`;\n\nexport const Button = styled.button`\n  font-family: \"Fjalla One\", sans-serif;\n  text-transform: uppercase;\n  border: none;\n  background-color: ${green};\n  color: #eee;\n  font-size: 15px;\n  border-radius: 4px;\n  border-bottom: 3px solid #4f773b;\n  margin-top: 10px;\n  padding: 5px 10px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const LoadingContainer = styled.div`\n  animation-name: ${spin};\n  animation-duration: 1000ms;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n  margin-top: 20px;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: orange;\n  margin-top: 20px;\n`;\n","import _ from \"lodash\";\n\nconst openingTermsMilestones = [\n  \"Opening\",\n  \"Defense\",\n  \"Game\",\n  \"Accepted\",\n  \"Declined\",\n];\n\nconst removeAfterIfExists = (opening, milestones) => {\n  return milestones.reduce((acc, milestone) => {\n    if (acc.includes(milestone)) {\n      return acc.substring(0, acc.indexOf(milestone) + milestone.length);\n    } else {\n      return acc;\n    }\n  }, opening);\n};\n\nconst retrieveMostCommonOpening = (mostCommonOpeningsObj) => {\n  return _.reduce(\n    mostCommonOpeningsObj,\n    (acc, value, key) => {\n      if (value > acc.count) {\n        return {\n          opening: key,\n          count: value,\n        };\n      } else {\n        return acc;\n      }\n    },\n    { opening: \"\", count: 0 }\n  );\n};\n\nconst parseOpenings = (openings) => {\n  return openings.map((opening) => {\n    const stripped = opening\n      .replace(\"https://www.chess.com/openings/\", \"\")\n      .replace(\"-\", \" \");\n\n    const removedAfterMilestones = removeAfterIfExists(\n      stripped,\n      openingTermsMilestones\n    );\n    return removedAfterMilestones;\n  });\n};\n\nexport const getMostCommonOpening = (games) => {\n  const openings = games.map((game) => {\n    return game.eco;\n  });\n\n  const parsedOpenings = parseOpenings(_.compact(openings));\n  const mostCommonOpeningsObj = _.countBy(parsedOpenings);\n  const mostCommonOpening = retrieveMostCommonOpening(mostCommonOpeningsObj);\n  return mostCommonOpening;\n};\n","const movesToObject = (str) => {\n  const onlyMoves = str.split(/\\n\\n/g)[1];\n  const splitBySpace = onlyMoves.split(\"  \");\n  const obj = splitBySpace.reduce((acc, cur) => {\n    const [moveNumber, move] = cur.split(\" \");\n    acc[moveNumber] = move;\n    return acc;\n  }, {});\n  return obj;\n};\n\nexport const pgnToObject = (pgn) => {\n  const splitFeatures = pgn.match(/\\[.*?]/gm);\n  const featuresToObject = splitFeatures.reduce((acc, feature) => {\n    const stripped = feature.replace(/[[\\]\"]/g, \"\");\n\n    const splitF = stripped.split(/ (.+)/);\n    acc[splitF[0]] = splitF[1];\n    return acc;\n  }, {});\n\n  const featuresToObjectWithMoves = {\n    ...featuresToObject,\n    Moves: movesToObject(pgn),\n  };\n  return featuresToObjectWithMoves;\n};\n","import React from \"react\";\nimport { green } from \"../styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Icon = ({ icon }) => {\n  return (\n    <FontAwesomeIcon\n      icon={icon}\n      color={green}\n      style={{ marginRight: \"10px\" }}\n    />\n  );\n};\n\nexport const LinkIcon = ({ url }) => {\n  return (\n    <a\n      href={url}\n      style={{ marginLeft: \"10px\" }}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <FontAwesomeIcon icon={faExternalLinkAlt} style={{ cursor: \"pointer\" }} />\n    </a>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrophy,\n  faChessPawn,\n  faSurprise,\n  faRunning,\n  faWalking,\n  faFlagCheckered,\n  faSpinner,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  Container,\n  Panel,\n  Results,\n  H1,\n  H2,\n  IconAndTitle,\n  Section,\n  Input,\n  Button,\n  LoadingContainer,\n  ErrorMessage,\n} from \"./styles\";\nimport { getMostCommonOpening } from \"./parsers/mostCommonOpening\";\nimport { getBiggestUpset } from \"./parsers/biggestUpset\";\nimport { getWinner } from \"./parsers/winner\";\nimport { getResultTypes } from \"./parsers/resultTypes\";\nimport { getGameWithMostMoves } from \"./parsers/mostMovesGame\";\nimport { getGameWithFewestMoves } from \"./parsers/fewestMovesGame\";\n\nimport { Icon, LinkIcon } from \"./utils/utilityComponents\";\n\nfunction App() {\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState();\n  const [userInput, setUserInput] = useState();\n\n  const [mostCommonOpening, setMostCommonOpening] = useState();\n  const [biggestUpset, setBiggestUpset] = useState();\n  const [winner, setWinner] = useState();\n  const [winningOutcomes, setWinningOutcomes] = useState();\n  const [mostMovesGame, setMostMovesGame] = useState();\n  const [fewestMovesGame, setFewestMovesGame] = useState();\n\n  const getData = async (evt) => {\n    evt.preventDefault();\n    setLoading(true);\n\n    // Take every after the last backslash. This is the relevant part of the URL.\n    const slug = userInput.replace(/(.*\\/)*/, \"\");\n\n    try {\n      const initialData = await axios.get(\n        `https://api.chess.com/pub/tournament/${slug}`\n      );\n      const roundData = await axios.get(initialData.data.rounds[0]);\n\n      // Data can be returned in two different ways; handle each case here.\n      if (roundData.data.games) {\n        setData(roundData.data);\n      } else if (roundData.data.groups) {\n        const nonArenaData = await axios.get(roundData.data.groups[0]);\n        setData(nonArenaData.data);\n      } else {\n        throw new Error();\n      }\n    } catch (err) {\n      // This will trigger an error message to be shown indicating the input may be incorrect.\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // This runs when data is successfully retrieved.\n    // Get and set data for the information that displays underneath the input field.\n    if (data) {\n      const mostCommonOpening = getMostCommonOpening(data.games);\n      setMostCommonOpening(mostCommonOpening);\n\n      const biggestUpset = getBiggestUpset(data.games);\n      setBiggestUpset(biggestUpset);\n\n      const winner = getWinner(data.players);\n      setWinner(winner);\n\n      const resultTypes = getResultTypes(data.games);\n      setWinningOutcomes(resultTypes);\n\n      const gameWithMostMoves = getGameWithMostMoves(data.games);\n      setMostMovesGame(gameWithMostMoves);\n\n      const gameWithFewestMoves = getGameWithFewestMoves(data.games);\n      setFewestMovesGame(gameWithFewestMoves);\n    }\n  }, [data]);\n\n  return (\n    <Container>\n      <Panel>\n        <H1>Chess.com Tournament Stats</H1>\n        <H2>Enter a tournament URL:</H2>\n\n        <form onSubmit={getData}>\n          <Input onChange={(evt) => setUserInput(evt.target.value)}></Input>\n          <Button type=\"submit\">See Stats</Button>\n        </form>\n\n        {error ? (\n          <ErrorMessage>\n            Sorry, no data could be found for that tournament. Please\n            double-check the tournament URL you entered.\n          </ErrorMessage>\n        ) : loading ? (\n          <LoadingContainer>\n            <FontAwesomeIcon icon={faSpinner} color=\"rgba(255,255,255,0.3)\" />\n          </LoadingContainer>\n        ) : data ? (\n          <Results>\n            {winner && (\n              <Section>\n                <IconAndTitle>\n                  <Icon icon={faTrophy} />\n                  <H2>Winner</H2>\n                </IconAndTitle>\n                <p>{winner}</p>\n              </Section>\n            )}\n            {_.get(mostCommonOpening, \"opening\") > 0 && (\n              <Section>\n                <IconAndTitle>\n                  <Icon icon={faChessPawn} />\n                  <H2>Most Common Opening</H2>\n                </IconAndTitle>\n                <p>\n                  {mostCommonOpening.opening} - played {mostCommonOpening.count}{\" \"}\n                  times\n                </p>\n              </Section>\n            )}\n            {winningOutcomes && (\n              <Section>\n                <IconAndTitle>\n                  <Icon icon={faFlagCheckered} />\n                  <H2>Result Types</H2>\n                </IconAndTitle>\n                <div style={{ width: 200, margin: \"auto\" }}>\n                  <PieChart\n                    label={({ dataEntry }) => {\n                      return `${dataEntry.title}: ${dataEntry.value}`;\n                    }}\n                    labelStyle={{ fontSize: \"5px\" }}\n                    data={[\n                      {\n                        title: \"Checkmated\",\n                        value: winningOutcomes.checkmated,\n                        color: \"rgba(255,255,255,0.5)\",\n                      },\n                      {\n                        title: \"Timeout\",\n                        value: winningOutcomes.timeout,\n                        color: \"rgba(255,255,255,0.2)\",\n                      },\n                      {\n                        title: \"Resigned\",\n                        value: winningOutcomes.resigned,\n                        color: \"rgba(255,255,255,0.3)\",\n                      },\n                    ]}\n                  />\n                </div>\n              </Section>\n            )}\n            {biggestUpset && (\n              <Section>\n                <IconAndTitle>\n                  <Icon icon={faSurprise} />\n                  <H2>Biggest Upset</H2>\n                </IconAndTitle>\n                <p>\n                  {biggestUpset.white.username} ({biggestUpset.white.rating}) vs{\" \"}\n                  {biggestUpset.black.username} ({biggestUpset.black.rating})\n                  <LinkIcon url={biggestUpset.url} />\n                </p>\n              </Section>\n            )}\n            {mostMovesGame && (\n              <Section>\n                <IconAndTitle>\n                  <Icon icon={faWalking} />\n                  <H2>Marathon</H2>\n                </IconAndTitle>\n                <p>\n                  {mostMovesGame.white.username} vs{\" \"}\n                  {mostMovesGame.black.username} had the most moves!\n                  <LinkIcon url={mostMovesGame.url} />\n                </p>\n              </Section>\n            )}\n            {fewestMovesGame && (\n              <Section>\n                <IconAndTitle>\n                  <Icon icon={faRunning} />\n                  <H2>Sprint</H2>\n                </IconAndTitle>\n                <p>\n                  {fewestMovesGame.white.username} vs{\" \"}\n                  {fewestMovesGame.black.username} had the fewest moves!\n                  <LinkIcon url={fewestMovesGame.url} />\n                </p>\n              </Section>\n            )}\n          </Results>\n        ) : null}\n      </Panel>\n    </Container>\n  );\n}\n\nexport default App;\n","export const getBiggestUpset = (games) => {\n  const biggestUpset = games.reduce((acc, game) => {\n    const winningRating =\n      game.white.result === \"win\"\n        ? game.white.rating\n        : game.black.result === \"win\"\n        ? game.black.rating\n        : null;\n\n    if (!winningRating) return acc;\n\n    const losingRating =\n      game.white.result === \"win\"\n        ? game.black.rating\n        : game.black.result === \"win\"\n        ? game.white.rating\n        : null;\n\n    const winningRatingExisting =\n      acc.white.result === \"win\"\n        ? acc.white.rating\n        : acc.black.result === \"win\"\n        ? acc.black.rating\n        : null;\n    const losingRatingExisting =\n      acc.white.result === \"win\"\n        ? acc.black.rating\n        : acc.black.result === \"win\"\n        ? acc.white.rating\n        : null;\n\n    const gap = losingRating - winningRating;\n\n    const gapExisting = losingRatingExisting - winningRatingExisting;\n\n    return gap > gapExisting ? game : acc;\n  }, games[0]);\n  return biggestUpset;\n};\n","import _ from \"lodash\";\n\nexport const getWinner = (players) => {\n  const found = players.find((player) => {\n    if (_.get(player, \"is_winner\")) {\n      return player.is_winner;\n    } else {\n      return player.place_finish === 1;\n    }\n  });\n\n  return found ? found.username : \"\";\n};\n","import _ from \"lodash\";\n\nexport const getResultTypes = (games) => {\n  const gameOutcomes = games.reduce(\n    (acc, game) => {\n      acc[game.black.result] += 1;\n      acc[game.white.result] += 1;\n      return acc;\n    },\n    { draw: 0, win: 0, timeout: 0, resigned: 0, checkmated: 0 }\n  );\n\n  return _.pick(gameOutcomes, [\"checkmated\", \"timeout\", \"resigned\"]);\n};\n","import _ from \"lodash\";\nimport { pgnToObject } from \"../utils/helperMethods\";\n\nexport const getGameWithMostMoves = (games) => {\n  const gameWithMostMoves = games.reduce((acc, game) => {\n    const pgnToObjCur = pgnToObject(\n      game.pgn.replace(/\\{\\[%clk.+?(?= |\\n)/gims, \"\")\n    );\n    const pgnToObjAcc = pgnToObject(\n      acc.pgn.replace(/\\{\\[%clk.+?(?= |\\n)/gims, \"\")\n    );\n\n    const movesCountCur = _.replace(\n      _.nth(Object.keys(pgnToObjCur.Moves), -2),\n      /\\./g,\n      \"\"\n    );\n\n    const movesCountAcc = _.replace(\n      _.nth(Object.keys(pgnToObjAcc.Moves), -2),\n      /\\./g,\n      \"\"\n    );\n\n    return movesCountCur > movesCountAcc ? game : acc;\n  }, games[0]);\n  return gameWithMostMoves;\n};\n","import _ from \"lodash\";\nimport { pgnToObject } from \"../utils/helperMethods\";\n\nexport const getGameWithFewestMoves = (games) => {\n  const gameWithFewestMoves = games.reduce((acc, game) => {\n    const pgnToObjCur = pgnToObject(\n      game.pgn.replace(/\\{\\[%clk.+?(?= |\\n)/gims, \"\")\n    );\n    const pgnToObjAcc = pgnToObject(\n      acc.pgn.replace(/\\{\\[%clk.+?(?= |\\n)/gims, \"\")\n    );\n\n    const movesCountCur = _.replace(\n      _.nth(Object.keys(pgnToObjCur.Moves), -2),\n      /\\./g,\n      \"\"\n    );\n\n    const movesCountAcc = _.replace(\n      _.nth(Object.keys(pgnToObjAcc.Moves), -2),\n      /\\./g,\n      \"\"\n    );\n\n    return movesCountCur < movesCountAcc ? game : acc;\n  }, games[0]);\n\n  return gameWithFewestMoves;\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}